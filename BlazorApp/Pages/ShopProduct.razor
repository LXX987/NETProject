@page "/shopProduct/{Id:int}"
@layout ShopLayout
@using BlazorApp.Data
@using BlazorApp.Service
@inject CommodityApiClient CommodityService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavigationManager
<h3>ShopProduct</h3>
<div>
    <Avatar Size="64" Src="https://img1.imgtp.com/2022/06/24/YZy9Rxfn.png" />
    <span>@shopName</span>
</div>
<Divider />
@if (ErrorMessage != null)
{
    <DisplayError ErrorMessage="@ErrorMessage"></DisplayError>
}
else
{
    <h3 class="mb-5">商品详情</h3>
    <div class="row">
        <div class="col-md-6 mb-4">
            <!--<img class="img-fluid" src="@Product.ImageURL">-->
            <img class="img-fluid" src="https://img1.imgtp.com/2022/06/24/YZy9Rxfn.png">
        </div>
        <div class="col-md-6">
            <h3>@Product.commodity_name</h3>
            <p class="txt">团购开始时间：@Product.start_time</p>
            <p class="txt">团购结束时间：@Product.end_time</p>
            <p class="mb-4">剩余数量：@Product.total_count</p>
            <p class="mb-4">
                <b>
                    @Product.item_price.ToString("C")
                </b>
            </p>
            <div>
                <button class="btn btn-success" @onclick="modify"><b>编辑商品</b></button>
            </div>
        </div>

    </div>
}
@code {
    [Parameter]
    public int Id { get; set; }

    Commodity Product = new Commodity();
    public string ErrorMessage { get; set; }
    string shopName = "小店";
    protected override async Task OnInitializedAsync()
    {
        Product = await CommodityService.getProduct(Id);
    }
    public void modify()
    {
        NavigationManager.NavigateTo("shopModifyProduct/"+Id);
    }
}
