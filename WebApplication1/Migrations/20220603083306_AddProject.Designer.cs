// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220603083306_AddProject")]
    partial class AddProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplication1.Models.Commodity", b =>
                {
                    b.Property<int>("commodity_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("commodity_id");

                    b.Property<int>("Usersuser_id")
                        .HasColumnType("int");

                    b.Property<string>("commodity_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("commodity_name");

                    b.Property<DateTime>("end_time")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_time");

                    b.Property<int>("item_price")
                        .HasColumnType("int")
                        .HasColumnName("item_price");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_time");

                    b.Property<int>("total_count")
                        .HasColumnType("int")
                        .HasColumnName("total_count");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("commodity_id");

                    b.HasIndex("Usersuser_id");

                    b.ToTable("Commodity", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("commodity_id")
                        .HasColumnType("int");

                    b.Property<int>("commodity_id1")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("time");

                    b.Property<int>("total_prince")
                        .HasColumnType("int")
                        .HasColumnName("total_price");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id1")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("commodity_id1");

                    b.HasIndex("user_id1");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.TemporaryOrder", b =>
                {
                    b.Property<int>("temporaryOrder_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("temporaryOrder_id");

                    b.Property<int>("commodity_id")
                        .HasColumnType("int");

                    b.Property<int>("commodity_id1")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("time");

                    b.Property<int>("total_prince")
                        .HasColumnType("int")
                        .HasColumnName("total_price");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id1")
                        .HasColumnType("int");

                    b.HasKey("temporaryOrder_id");

                    b.HasIndex("commodity_id1");

                    b.HasIndex("user_id1");

                    b.ToTable("TemporaryOrder", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("userName");

                    b.Property<string>("userType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("userType");

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("userEmail");

                    b.Property<string>("user_pwd")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("userPwd");

                    b.HasKey("user_id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Commodity", b =>
                {
                    b.HasOne("WebApplication1.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("Usersuser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.HasOne("WebApplication1.Models.Commodity", "Commodity")
                        .WithMany()
                        .HasForeignKey("commodity_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Models.TemporaryOrder", b =>
                {
                    b.HasOne("WebApplication1.Models.Commodity", "Commodity")
                        .WithMany()
                        .HasForeignKey("commodity_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
